name: CI/CD Pipeline
# Evento que dispara o workflow
on:
  push:
    branches:
      - main  # Dispara em pushs para a branch main
  pull_request:
    branches:
      - main  # Dispara em pull requests para a branch main

jobs:
  build:
    runs-on: ubuntu-latest  # Define o sistema operacional do runner

    services:
      postgres:
        image: postgres:latest  # Usa a imagem mais recente do PostgreSQL
        env:
          POSTGRES_DB: mydatabase  # Nome do banco de dados
          POSTGRES_USER: postgres  # Usuário do banco de dados
          POSTGRES_PASSWORD: password  # Senha do banco de dados
        options: > 
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432  # Mapeamento de portas

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Faz o checkout do código

    - name: Set up Node.js
      uses: actions/setup-node@v2  # Configura o Node.js
      with:
        node-version: '16'  # Escolhe a versão do Node.js

    - name: Install Dependencies (Frontend)
      run: |
        cd frontend
        npm install  # Instala as dependências do frontend

    - name: Install Dependencies (Backend)
      run: |
        cd backend
        npm install  # Instala as dependências do backend

    - name: Lint Frontend
      run: |
        cd frontend
        npm run lint  # Executa o lint no frontend

    - name: Lint Backend
      run: |
        cd backend
        npm run lint  # Executa o lint no backend

    - name: Run Backend Tests
      run: |
        cd backend
        npm test  # Executa os testes do backend

 
